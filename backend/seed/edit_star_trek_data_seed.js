#!/usr/bin/env node
/**
 * Ensures every node in boxTrees.mock.js has `imagePath: null`.
 * Writes a new file `boxTrees.withImages.mock.js` by default.
 * Run with --in-place to overwrite the original file.
 */

const fs = require('fs');
const path = require('path');

// Paths
const INPUT = path.join(__dirname, 'boxTrees.mock.js');
const OUTPUT = path.join(__dirname, 'boxTrees.withImages.mock.js');

// Load the seed (CJS export)
const seed = require(INPUT);

// Recursive walker
function addImageNull(nodes) {
  return nodes.map((node) => {
    const out = {
      ...node,
      imagePath: null, // always null
    };
    if (Array.isArray(node.children) && node.children.length) {
      out.children = addImageNull(node.children);
    }
    return out;
  });
}

// Main
(function main() {
  const inPlace = process.argv.includes('--in-place');
  const withImages = addImageNull(seed);

  const outPath = inPlace ? INPUT : OUTPUT;
  const header =
    `// Auto-generated by edit_star_trek_data_seed.js\n` +
    `// DO NOT EDIT THIS FILE BY HAND.\n\n`;
  const body = `module.exports = ${JSON.stringify(withImages, null, 2)};\n`;

  fs.writeFileSync(outPath, header + body, 'utf8');
  console.log(`✅ Wrote ${outPath}`);
  if (!inPlace) {
    console.log(
      'ℹ️  Run again with --in-place to overwrite the original file.'
    );
  }
})();
